import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

void main() {
  runApp(const DilbilimApp());
}

class DilbilimApp extends StatelessWidget {
  const DilbilimApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Dilbilim Sözlük',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.green),
        useMaterial3: true,
      ),
      home: const LoginScreen(),
    );
  }
}

class LoginScreen extends StatefulWidget {
  const LoginScreen({super.key});
  @override
  State<LoginScreen> createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  final TextEditingController emailController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();
  String message = "";

  Future<void> login() async {
    final response = await http.post(
      Uri.parse('http://10.0.2.2:5000/login'), // Sunucu IP adresini kendi bilgisayarına göre değiştir
      headers: {"Content-Type": "application/json"},
      body: json.encode({
        "email": emailController.text,
        "password": passwordController.text,
      }),
    );
    final data = json.decode(response.body);
    if (response.statusCode == 200) {
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => const LanguageListScreen()),
      );
    } else {
      setState(() {
        message = data["error"] ?? "Bir hata oluştu!";
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: Padding(
        padding: const EdgeInsets.all(32.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text("Dilbilim Sözlük", style: TextStyle(fontSize: 28, fontWeight: FontWeight.bold, color: Colors.green)),
            SizedBox(height: 24),
            TextField(
              controller: emailController,
              decoration: InputDecoration(labelText: "E-posta"),
            ),
            TextField(
              controller: passwordController,
              obscureText: true,
              decoration: InputDecoration(labelText: "Şifre"),
            ),
            SizedBox(height: 16),
            ElevatedButton(onPressed: login, child: Text("Giriş Yap")),
            SizedBox(height: 12),
            Text(message, style: TextStyle(color: Colors.red)),
          ],
        ),
      ),
    );
  }
}

class LanguageListScreen extends StatefulWidget {
  const LanguageListScreen({super.key});

  @override
  State<LanguageListScreen> createState() => _LanguageListScreenState();
}

class _LanguageListScreenState extends State<LanguageListScreen> {
  List<dynamic> languages = [];
  bool loading = true;

  Future<void> fetchLanguages() async {
    final response = await http.get(Uri.parse('http://10.0.2.2:5000/languages'));
    if (response.statusCode == 200) {
      setState(() {
        languages = json.decode(response.body);
        loading = false;
      });
    }
  }

  @override
  void initState() {
    super.initState();
    fetchLanguages();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Diller")),
      body: loading
          ? Center(child: CircularProgressIndicator())
          : ListView.builder(
              itemCount: languages.length,
              itemBuilder: (context, index) {
                final lang = languages[index];
                return ListTile(
                  title: Text("${lang['name']} (${lang['word_count']})"),
                  subtitle: Text("Kod: ${lang['code']}"),
                  onTap: () {
                    // Kelime listesi veya lehçe açılabilir!
                  },
                );
              },
            ),
    );
  }
}